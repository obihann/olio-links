
mixin Badge(method)
    case method
        when 'GET'
            span.badge.get: i.fa.fa-arrow-down
        when 'POST'
            span.badge.post: i.fa.fa-plus
        when 'PUT'
            span.badge.put: i.fa.fa-pencil
        when 'PATCH'
            span.badge.patch: i.fa.fa-pencil
        when 'DELETE'
            span.badge.delete: i.fa.fa-times
        default
            span.badge: i.fa.fa-dot-circle-o

mixin Nav(multipage)
    //- Draw a navigation bar, which includes links to individual
    //- resources and actions.
    nav
        each resourceGroup in self.api.resourceGroups || []
            .resource-group
                .heading: a(href=self.sluglink(resourceGroup.name))= resourceGroup.name
                ul: each resource in resourceGroup.resources || []
                    li
                        a(href=self.sluglink("#{resourceGroup.name}-#{resource.name}"))= resource.name
                        ul: each action in resource.actions || []
                            li: a(href=self.sluglink("#{resourceGroup.name}-#{resource.name}-#{action.method}"))
                              = action.name || action.method + ' ' + resource.uriTemplate
                              +Badge(action.method)
        each meta in self.api.metadata || {}
            if meta.name == 'HOST'
                p(style="text-align: center; word-wrap: break-word;")
                    a(href=meta.value)= meta.value

mixin Parameters(params)
    //- Draw a definition list of parameter names, types, defaults,
    //- examples and descriptions.
    .title
        strong Parameters
        .collapse-button.show
            span.close Hide
            span.open Show
    dl.collapse-content
        .inner: each param in params || []
            dt= param.name
            dd
                code= param.type
                | &nbsp;
                if param.required
                    span.required (required)
                else
                    span (optional)
                | &nbsp;
                if param.default
                    span.text-info.default
                        strong Default:&nbsp;
                        span= param.default
                    | &nbsp;
                if param.example
                    span.text-muted.example
                        strong Example:&nbsp;
                        span= param.example
                != self.markdown(param.description)
                if param.values.length
                    p
                        strong Choices:&nbsp;
                        each value in param.values
                            code= value.value
                            = ' '

mixin RequestResponse(title, request, resourceGroup, resource, action)
    - var id = self.hash(resourceGroup.name.toString() + resource.name.toString() + action.name.toString() + action.method.toString() + title.toString() + request.name.toString() + request.headers.toString() + request.body.toString() + request.schema.toString())
    - var content = request.description || Object.keys(request.headers).length || request.body || request.schema
    .title
        strong
            = title
            if request.name
                | &nbsp;&nbsp;
                code= request.name
        if content
            .collapse-button
                span.close Hide
                span.open Show
    if content
        .collapse-content(id=id)
            .inner
                if request.description
                    .description!= self.markdown(request.description)

                if Object.keys(request.headers).length
                    h5 Headers
                    pre
                        code
                            each item in request.headers
                                != self.highlight(item.name + ': ' + item.value, 'http')
                                br
                if request.body
                    h5 Body
                    pre
                        code!= self.highlight(request.body, null, ['json', 'yaml', 'xml', 'javascript'])
                if request.schema
                    h5 Schema
                    pre
                        code!= self.highlight(request.schema, null, ['json', 'yaml', 'xml'])

mixin Examples(resourceGroup, resource, action)
    each example in action.examples
        each request in example.requests
            +RequestResponse('Request', request, resourceGroup, resource, action)
        each response in example.responses
            +RequestResponse('Response', response, resourceGroup, resource, action)

mixin Content(getButtonClass, multipage)
    //- Page header and API description
    header
        h1#top= self.api.name || 'API Documentation'

    if self.api.description
        != self.markdown(self.api.description)

    //- Loop through and display information about all the resource
    //- groups, resources, and actions.
    each resourceGroup in self.api.resourceGroups || []
        section.resource-group(id=self.slug(resourceGroup.name))
            h2= resourceGroup.name
                a.permalink(href=self.sluglink(resourceGroup.name)): i.fa.fa-link
            if resourceGroup.description
                != self.markdown(resourceGroup.description)

            each resource in resourceGroup.resources || []
                .resource(id=self.slug("#{resourceGroup.name}-#{resource.name}"))
                    h3= resource.name
                        a.permalink(href=self.sluglink("#{resourceGroup.name}-#{resource.name}")): i.fa.fa-link
                    if resource.description
                        != self.markdown(resource.description)

                    each action in resource.actions || []
                        .action(class="#{action.method.toLowerCase()}", id=self.slug("#{resourceGroup.name}-#{resource.name}-#{action.method}"))
                            h4
                                .name= action.name
                                a.method(class="#{action.method.toLowerCase()}", href="#")
                                    = action.method
                                code.uri= resource.uriTemplate
                            if action.description
                                != self.markdown(action.description)

                            //- A list of sub-sections for parameters, requests, and
                            //- responses.
                            - var params = action.parameters.length ? action.parameters : resource.parameters
                            if params.length
                                +Parameters(params)
                            if action.examples
                                +Examples(resourceGroup, resource, action)
